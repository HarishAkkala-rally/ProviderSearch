[{"/Users/csriniv6/ScalaTestApp/ui/src/index.tsx":"1","/Users/csriniv6/ScalaTestApp/ui/src/reportWebVitals.ts":"2","/Users/csriniv6/ScalaTestApp/ui/src/ProviderSearch.tsx":"3","/Users/csriniv6/ScalaTestApp/ui/src/Login.tsx":"4","/Users/csriniv6/ScalaTestApp/ui/src/ProtectedRoute.tsx":"5","/Users/csriniv6/ScalaTestApp/ui/src/Register.tsx":"6","/Users/csriniv6/ScalaTestApp/ui/src/PersonImage.tsx":"7","/Users/csriniv6/ScalaTestApp/ui/src/SearchBox.tsx":"8","/Users/csriniv6/ScalaTestApp/ui/src/LogOut.tsx":"9"},{"size":1405,"mtime":1606914039685,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1606914039686,"results":"12","hashOfConfig":"11"},{"size":4122,"mtime":1606914039684,"results":"13","hashOfConfig":"11"},{"size":3220,"mtime":1606914039683,"results":"14","hashOfConfig":"11"},{"size":1565,"mtime":1606914039684,"results":"15","hashOfConfig":"11"},{"size":2519,"mtime":1606914039684,"results":"16","hashOfConfig":"11"},{"size":187,"mtime":1606914039683,"results":"17","hashOfConfig":"11"},{"size":1688,"mtime":1606914039684,"results":"18","hashOfConfig":"11"},{"size":251,"mtime":1606914039683,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lyym1o",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/csriniv6/ScalaTestApp/ui/src/index.tsx",[],["46","47"],"/Users/csriniv6/ScalaTestApp/ui/src/reportWebVitals.ts",[],"/Users/csriniv6/ScalaTestApp/ui/src/ProviderSearch.tsx",["48","49","50","51","52","53"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport PersonImage from \"./PersonImage\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SearchBox from \"./SearchBox\";\n\nexport interface Provider {\n  name: String;\n  specialty: String;\n  locations: Location[]\n}\n\ninterface Location {\n  anp: string;\n  address: Address;\n}\ninterface Address {\n  line1: string;\n  line2: string;\n  line3: string;\n  city: string;\n  state: string;\n  zip: string;\n  phone: string\n}\n\n\nfunction ProviderSearch() {\n  const [error, setError] = useState({ message: '' });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [providers, setProviders] = useState<Provider[]>([]);\n\n  useEffect(() => {\n    axios.get('/api/providers').then(\n      result => {\n        if (result.status === 401)\n          setUnauthorized(true)\n        else if (result.status !== 200)\n          setError(result.data);\n        else {\n          setIsLoaded(true);\n          setProviders(result.data);\n        }\n      },\n      error => {\n        setIsLoaded(true);\n        if (error.response && error.response.status == 401)\n          setUnauthorized(true);\n        setError(error);\n      }\n    )\n\n  }, []);\n\n  if (unauthorized)\n    return <Redirect to={{ pathname: '/login' }} />\n  if (error.message !== '') {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <Container>\n        <div className='search-heading'><h2>Who are you looking for? </h2></div>\n\n        <SearchBox search={setProviders}></SearchBox>\n\n        {\n          providers.map(p => {\n            const location = p.locations[0];\n            const { address } = location;\n            return <div className='provider'>\n              <Row>\n                <Col md={8} sm={8}>\n                  <Row>\n                    <Col sm={4} md={4} lg={2}>\n                      <PersonImage></PersonImage>\n                    </Col>\n                    <Col sm>\n                      <div className='provider-details'>\n                        <div>\n                          <h4 className='provider-heading'>{p.name}</h4>\n                        </div>\n                        <div>\n                          <h6>{p.specialty}</h6>\n                        </div>\n                        <div>\n                          {address.line1}, {address.city} {address.zip}\n                        </div>\n                        <div>\n                          {address.phone} PHONE\n                      </div>\n                        {\n                          ((p.locations.length - 1) > 0) &&\n                          <div>\n                            <a href='#' > View additional locations({p.locations.length - 1})</a>\n                          </div>\n\n                        }\n                      </div>\n                    </Col>\n                  </Row>\n\n                </Col>\n                <Col md sm>\n                  <div className='provider-details'>\n                    {\n                      (location.anp === 'A') && <a href='#'>Accepting all patients</a>\n                    }\n                    {\n                      (location.anp === 'E') && <a href='#'>Accepting existing patients</a>\n                    }\n                    {\n                      (location.anp === 'N') && <a href='#'>Not accepting patients</a>\n                    }\n                  </div>\n                  <br/>\n                  <div className='provider-details'>\n                  <a href='#'>Not evaluated for premium care</a>\n                  </div>\n                </Col>\n              </Row>\n            <div style={{fontSize:'13px',padding:'23px',marginTop:'10px', marginBottom:'40px', backgroundColor:'#E7E5E5',borderBottom:'1px gray solid',color:'green'}}>\n                    Office visit - Primary doctor - Established Patient - Moderate Complexity\n            </div>\n\n            </div>;\n          })\n        }\n      </Container>\n    );\n  }\n}\n\nexport default ProviderSearch;","/Users/csriniv6/ScalaTestApp/ui/src/Login.tsx",["54","55"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { Button, FormText, FormLabel, Form, Row, Col } from 'react-bootstrap';\n\n\nexport interface LoginProps {\n\n}\n\nexport interface LoginState {\n    creds: {\n        userName: string;\n        password: string;\n    };\n    authenticated: boolean;\n    message: string;\n    register: boolean;\n}\n\nclass Login extends React.Component<LoginProps, LoginState> {\n\n    constructor(props) {\n        super(props);\n        this.state = { creds: { userName: '', password: '' }, authenticated: false, message: '', register: false };\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n    }\n\n    handleNameChange(event) {\n        this.setState({ creds: { ...this.state.creds, userName: event.target.value } });\n    }\n    handlePasswordChange(event) {\n        this.setState({ creds: { ...this.state.creds, password: event.target.value } });\n    }\n\n    handleSubmit(event) {\n        axios.post(\"/api/signin\", this.state.creds)\n            .then(token => {\n                if (token.status !== 200)\n                    this.setState({ message: \"No..No..\" })\n                else {\n                    localStorage.setItem('token', token.data);\n                    this.setState({ authenticated: true })\n                }\n                event.preventDefault();\n            },\n                error => {\n                    this.setState({ message: error.response.data });\n                }\n            )\n    }\n\n    handleRegister(event) {\n        this.setState({ register: true });\n    }\n\n    render() {\n        const { userName, password } = this.state.creds;\n        if (this.state.authenticated)\n            return <Redirect to={{ pathname: '/' }} />\n        else if (this.state.register)\n            return <Redirect to={{ pathname: '/register' }} />\n        else\n            return (\n                <div>\n                    <Row>\n                        <Col sm={10} />\n                        <Col>\n                            <Button type=\"submit\" value=\"Submit\" onClick={this.handleRegister} >Register</Button>\n                        </Col>\n                    </Row>\n\n                    <div className='center_div'>\n                        <h4>LOGIN</h4>\n                        <div >\n                            <Form.Group>\n                                <Form.Control type=\"text\" placeholder=\"User Id\" onChange={this.handleNameChange} value={userName} />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange} value={password} />\n                            </Form.Group>\n                            <Button type=\"submit\" value=\"Submit\" onClick={this.handleSubmit} >Login</Button>\n                        </div>\n\n                        <div>{this.state.message} </div>\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default Login;","/Users/csriniv6/ScalaTestApp/ui/src/ProtectedRoute.tsx",["56"],"import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Logout from \"./LogOut\";\n\ninterface Props {\n    component: any;\n    exact: Boolean;\n    path: String;\n}\n\nclass ProtectedRoute extends React.Component<Props> {\n\n    render() {\n        const Component = this.props.component;\n        const isAuthenticated = localStorage.getItem('token');\n\n        return (\n            <div>\n\n                {isAuthenticated ? (\n                    <div>\n                        <div style={{ borderBottom: '1px lightgray solid', marginBottom: '20px' }}>\n                            <Row>\n                                <Col sm={9}>\n                                    <div style={{ padding: '10px 10px 10px 60px', color: \"#205490\", fontWeight: 'bold' }}>\n                                        <h4> Rally Health India </h4>\n                                    </div>\n                                </Col>\n                                <Col>\n                                    <div style={{ padding: '10px 10px 10px 60px', color: \"#205490\", fontWeight: 'bold' }}>\n                                        <Logout />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                        <Component />\n                    </div>\n                ) : (\n                        <Redirect to={{ pathname: '/login' }} />\n                    )}\n            </div>)\n    }\n}\n\nexport default ProtectedRoute;","/Users/csriniv6/ScalaTestApp/ui/src/Register.tsx",["57","58"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { Button, FormText, FormLabel, Form } from 'react-bootstrap';\n\n\nexport interface LoginProps {\n\n}\n\nexport interface LoginState {\n    creds: {\n        userName: string;\n        password: string;\n    };\n    registered: boolean;\n    message: string;\n}\n\nclass Register extends React.Component<LoginProps, LoginState> {\n\n    constructor(props) {\n        super(props);\n        this.state = { creds: { userName: '', password: '' }, registered: false, message: '' };\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleNameChange(event) {\n        this.setState({ creds: { ...this.state.creds, userName: event.target.value } });\n    }\n    handlePasswordChange(event) {\n        this.setState({ creds: { ...this.state.creds, password: event.target.value } });\n    }\n\n    handleSubmit(event) {\n        axios.post(\"/api/register\", this.state.creds)\n            .then(token => {\n                if (token.status !== 200)\n                    this.setState({ message: \"Registration failed\" })\n                else {\n                    this.setState({ registered: true })\n\n                }\n                event.preventDefault();\n            },\n                error => {\n                    this.setState({ message: error.response.data });\n                }\n            )\n    }\n\n    render() {\n        const { userName, password } = this.state.creds;\n        if (this.state.registered)\n            return <Redirect to={{ pathname: '/login' }} />\n        else\n            return (\n                <div className='center_div'>\n                <h4>REGISTRATION</h4>\n                    <div >\n                        <Form.Group>\n                            <Form.Control type=\"text\" placeholder=\"User Id\" onChange={this.handleNameChange} value={userName} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange} value={password} />\n                        </Form.Group>\n                        <Button type=\"submit\" value=\"Submit\" onClick={this.handleSubmit} >Register</Button>\n                    </div>\n\n                    <div>{this.state.message} </div>\n                </div>\n            );\n    }\n}\n\nexport default Register;","/Users/csriniv6/ScalaTestApp/ui/src/PersonImage.tsx",["59"],"import * as React from 'react';\nimport personImage from './images/person.png';\n\nfunction PersonImage(){\n    return <img src={personImage} width='60' ></img>;\n}\nexport default PersonImage;","/Users/csriniv6/ScalaTestApp/ui/src/SearchBox.tsx",["60","61"],"import React from 'react';\nimport { Provider } from './ProviderSearch';\nimport axios from \"axios\";\nimport { Button, Form, Row, Col } from 'react-bootstrap';\n\n\ninterface SearchBoxProps {\n    search: (providers: Provider[]) => void;\n}\n\nexport interface SearchBoxState {\n    text: string;\n    message: string;\n}\n\nclass SearchBox extends React.Component<SearchBoxProps, SearchBoxState> {\n    constructor(props) {\n        super(props);\n        this.state = { text: '', message: '' };\n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    getResults = (text) => {\n        axios.get(\"/api/search\",{ params: { text: text } })\n            .then(providers => {\n                if (providers.status !== 200)\n                    this.setState({ message: \"No..No..\" })\n                else {\n                    this.props.search(providers.data);\n                }\n                \n            },\n                error => {\n                    this.setState({ message: error.response.data });\n                }\n            );\n    }\n\n    handleSearch(event) {\n        this.getResults(this.state.text);\n        event.preventDefault();\n    }\n    handleTextChange(event) {\n        this.setState({ text: event.target.value });\n        this.getResults(event.target.value);\n    }\n    render() {\n        return (<div style={{backgroundColor:'#E7E5E5',padding:'30px',marginTop:'30px'}}>\n            <Row>\n                <Form.Control type=\"text\" style={{width:'100%'}}  placeholder=\"Search here\" onChange={this.handleTextChange} value={this.state.text} />\n            </Row>\n        </div>);\n    }\n}\n\nexport default SearchBox;\n\n","/Users/csriniv6/ScalaTestApp/ui/src/LogOut.tsx",["62"],"import * as React from 'react';\n\nfunction Logout() {\n\n    function logout(){\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    return <a href='#' onClick={logout} style={{color:'inherit'}}>Logout</a>;\n}\n\nexport default Logout;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":49,"column":53,"nodeType":"69","messageId":"70","endLine":49,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":98,"column":29,"nodeType":"73","endLine":98,"endColumn":42},{"ruleId":"71","severity":1,"message":"72","line":110,"column":49,"nodeType":"73","endLine":110,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":113,"column":49,"nodeType":"73","endLine":113,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":116,"column":49,"nodeType":"73","endLine":116,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":121,"column":19,"nodeType":"73","endLine":121,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":4,"column":18,"nodeType":"76","messageId":"77","endLine":4,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":4,"column":28,"nodeType":"76","messageId":"77","endLine":4,"endColumn":37},{"ruleId":"74","severity":1,"message":"79","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":4,"column":18,"nodeType":"76","messageId":"77","endLine":4,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":4,"column":28,"nodeType":"76","messageId":"77","endLine":4,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":5,"column":12,"nodeType":"73","endLine":5,"endColumn":47},{"ruleId":"74","severity":1,"message":"82","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"83","line":4,"column":29,"nodeType":"76","messageId":"77","endLine":4,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":10,"column":12,"nodeType":"73","endLine":10,"endColumn":67},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","'FormLabel' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]